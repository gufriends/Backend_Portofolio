name: Deploy to Production Server

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: upan123
          POSTGRES_USER: postgres
          POSTGRES_DB: portoe
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run DB Migration
        run: npx prisma migrate dev --name ciTestMigration
        env:
          DATABASE_URL: "postgresql://postgres:upan123@localhost:5432/portoe"

      - name: Run Build
        run: npm run build

  deploy:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            # Fix git ownership issues
            sudo git config --global --add safe.directory /var/www/backend_portofolio

            cd /var/www/backend_portofolio

            # # Fix ownership
            # sudo chown -R $USER:$USER /var/www/backend_portofolio

            # Backup current state
            git add . && git stash

            # Pull latest code from main branch
            git fetch origin main
            git pull origin main

            # Clean node_modules if permission issues
            sudo rm -rf node_modules package-lock.json

            # Install dependencies with proper permissions
            npm install

            # Generate Prisma client
            npx prisma generate

            # Run database migrations
            npx prisma migrate deploy

            # Clean dist folder properly
            sudo rm -rf dist

            # Build application
            npm run build

            # Check if PM2 process exists, if not create it
            if pm2 describe api-portofolio > /dev/null; then
              pm2 restart api-portofolio
            else
              pm2 start dist/index.js --name "api-portofolio" -- --service=rest
            fi

            # Verify deployment
            sleep 5
            pm2 list

            # Test if application is responding
            curl -f http://localhost:3155 || exit 1

            echo "âœ… Deployment completed successfully!"
