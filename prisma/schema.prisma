// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id            String      @id @unique
  fullName      String
  email         String      @unique
  password      String
  projects       Project[]
  experiences    Experience[]
}

model Project {
  id            String       @id @default(cuid())
  imageSrc      String?
  projectUrl    String?
  year          String
  status        String
  technologies  Technology[]
  imagePosition String?      @default("left")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  userId        String
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  translations  ProjectTranslation[]
}

model ProjectTranslation {
  id          String  @id @default(cuid())
  projectId   String
  language    String  // 'id' atau 'en'
  title       String
  category    String
  description String
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([projectId, language])
  @@map("project_translations")
}

model Technology {
  id        String  @id @default(cuid())
  icon      String
  alt       String
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("technologies")
}

model Experience {
  id           String   @id @default(cuid())
  startDate    DateTime
  endDate      DateTime?
  location     String?
  isActive     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  translations ExperienceTranslation[]

  @@map("experiences")
}

model ExperienceTranslation {
  id           String     @id @default(cuid())
  experienceId String
  language     String     // 'id' atau 'en'
  company      String
  position     String
  description  String
  experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)

  @@unique([experienceId, language])
  @@map("experience_translations")
}
